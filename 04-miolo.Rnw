<<>>=
legislatures = c(50, 51, 52, 53, 54)
votes = list()
votes_metadata = list()

for (legislature in legislatures) {
  votes[[legislature]] = read.csv(paste("data/", legislature, ".csv", sep=""),
                                  header = TRUE, check.names = FALSE)
  votes_metadata[[legislature]] = read.csv(paste("data/", legislature, "-votacoes.csv", sep=""),
                                           header = TRUE, check.names = FALSE)
}

coalition_changes = read.csv("data/parties_and_coalitions_changes.csv",
                             header = TRUE, check.names = FALSE)
coalition_changes$rollcall_date = as.POSIXct(coalition_changes$rollcall_date)
coalition_changes = coalition_changes[coalition_changes$rollcall_date >= as.POSIXct("1995-02-01") &
                                      coalition_changes$rollcall_date <= as.POSIXct("2015-01-31"),]
@

\chapter{Miolo da sua dissertação}\label{cap:miolo}

Neste capítulo apresentaremos o processo de desenvolvimento, partindo da
definição dos objetivos e período de estudo, passando pela extração, limpeza e
transformação dos dados, que serão brevemente analisados para entendermos suas
características e, a partir delas, escolher possíveis modelos preditivos que
serão validados para chegar ao modelo final.

O objetivo final deste trabalho é detectar mudanças de comportamento no padrão
de votações dos deputados federais que indiquem sua entrada ou saída da
% TODO: Esses são os critérios de uma nova coalizão, mas não definem
% (diretamente) quais são os partidos que pertencem a mesma
coalizão do governo. Os critérios de pertencimento a coalizão são: i) a mudança
da legislatura, e; ii) alterações no conjunto de partidos que controlam os
ministérios. Eles foram definidos por \citeonline{Figueiredo2007}, inspirada no
trabalho de \citeonline{Muller2000}.

O período de estudo considerado vai da 50\textordfeminine{} até a
54\textordfeminine{} legislatura, que compreende o período de 20 anos entre
1995 e 2015 do início do primeiro governo de Fernando Henrique Cardoso (FHC)
até o final do primeiro governo de Dilma Rousseff. Esta escolha foi feita por
ser quando, de acordo com \citeonline{Freitas2008}, termina a fase de
acomodação dos parlamentares as novas regras definidas pela constituição de
1998 e vai até a última legislatura completa disponível.

A lista das coalizões nesse período foi obtida através do banco de dados
legislativos do \gls{CEBRAP}. Ela contém a data de início e fim e os partidos
que a compõe. Como esta análise trabalha com o parlamentar individualmente,
gerei outra lista que contém todas as entradas e saídas dos parlamentares na
coalizão dentro de uma mesma legislatura. Por exemplo, o deputado Arlindo
Chinaglia (PT/SP) é filiado ao PT desde sua fundação em 1980 e mantém seu cargo
na Câmara desde 1995. Apesar dele passar de oposição a governo em 2003 com a
eleição de Lula, não consideramos isso uma mudança pois ela ocorreu entre
legislaturas. Já a saída de Romário (PSB/RJ) da coalizão quando seu partido se
tornou oposição em 2013 é considerada, pois ocorreu durante uma mesma
legislatura.

A figura \ref{fig:mudancas-mensais-de-coalizao} mostra as
\Sexpr{nrow(coalition_changes)} entradas e saídas da coalizão do período de
estudo agrupados por mês. Podemos perceber que há meses nos quais um número
excepcionalmente alto de deputados trocam de posicionamento. Marcamos também a
data da Resolução n\textordmasculine{} 22.600 do TSE, que alterou o
entendimento das regras de fidelidade partidária, tornando-as mais restritas
\cite{TSE2007}. Percebe-se que essa mudança alterou a frequência de entradas e
saídas da coalizão, o que pode influenciar na acurácia do nosso modelo.

<<mudancas-mensais-de-coalizao, fig.cap="Número de deputados federais que mudaram de posicionamento, entrando ou saindo da coalizão entre a 50\\textordfeminine{} e 54\\textordfeminine{} legislaturas.">>=
coalition_changes_by_month = table(format(coalition_changes$rollcall_date, "%Y-%m-01"))
coalition_changes_by_month = data.frame(date = as.POSIXct(names(coalition_changes_by_month)),
                                        count = as.vector(coalition_changes_by_month))
data_resolucao_infidelidade = as.POSIXct("2007-10-25")
ggplot(coalition_changes_by_month, aes(x = date, y = count)) +
  geom_bar(stat = "identity") +
  geom_vline(xintercept = as.numeric(data_resolucao_infidelidade), linetype = "dashed") +
  annotate("text", x = data_resolucao_infidelidade, y = 85, label = "Resolução do TSE\nsobre infidelidade partidária") +
  theme_bw() +
  labs(x = "", y = "Entradas e saídas da coalizão")
@

As listas de votações e votos foram extraídas diretamente do site da Câmara dos
Deputados. Apesar da Câmara disponibilizar uma \gls{API} para consulta desses
dados através de um programa, até a data de escrita deste trabalho esta
consulta só poderiam ser feitas individualmente, votação por votação. Para
desenvolver o modelo preditivo, precisamos ter acesso a todos os dados
localmente, então desenvolvi um programa\footnote{Disponível em:
\url{https://github.com/vitorbaptista/dados-abertos-camara.gov.br}} na
linguagem Python que, com o auxílio da biblioteca Scrapy, baixa todas as
votações \cite{Python276,Scrapy}.
\nocite{CEBRAP2015,CamaraDosDeputados2015}

\begin{table}
\centering
<<>>=
num_deputados = simplify2array(lapply(votes[legislatures], nrow))
num_votacoes = simplify2array(lapply(votes[legislatures], ncol)) - 4
num_votos = simplify2array(lapply(votes[legislatures], function (v) {
  just_votes = v[, -c(1:4)]
  sum(just_votes == 0 | just_votes == 1, na.rm = TRUE)
}))
data = data.frame(legislature = legislatures,
                  num_deputados = num_deputados,
                  num_votacoes = num_votacoes,
                  num_votos = num_votos)

kable(data,
      row.names = FALSE,
      col.names = c("Legislatura", "Deputados Federais", "Votações", "Votos"))
@
\caption{Número de deputados federais e votações por legislatura}
\label{table:estatisticas-legislaturas}
\end{table}

A tabela \ref{table:estatisticas-legislaturas} mostra o número de deputados
federais, votações e votos por legislatura. Consideramos todos parlamentares
que participaram de alguma votação na Câmara dos Deputados no período, por isso
o número é maior do que o número de cadeiras. Por legislatura, temos em média
\Sexpr{mean(num_deputados)} deputados e \Sexpr{sum(num_votos) /
sum(num_votacoes)} votos em \Sexpr{mean(num_votacoes)} votações. Só
consideramos votos ``sim'' ou ``não''. % FIXME: Por que?

Os nomes dos partidos foram alterados seguindo o padrão adotado pelo
\gls{CEBRAP} onde mudanças de nome são identificados pela primeira e última
sigla (e.x.: o PJ que se tornou PRN que se tornou PJC é renomeado para PJ>PTC)
e fusões são identificados pelo maior partido na data da fusão e o novo nome
(e.x.: PL e PRONA se uniram formando o PR, então temos PL>PR)
\cite{Freitas2008}. A lista completa pode ser consultada no apêndice
\ref{apendice:lista-partidos}.

O próximo passo é determinar o período em que analisamos a mudança de
comportamento. Ele precisa ser longo o suficiente para evitar que
votações anômalas influenciem demais o resultado, mas curto o suficiente para
detectarmos as mudanças rapidamente, e levar em conta que o W-NOMINATE, por
padrão, só considera parlamentares que participaram de pelo menos 20 votações
com no mínimo 2,5\% de votos contrários a maioria\footnote{Esses valores podem
ser alterados, mas preferi manter o padrão. POR QUE, ANIMAL?!}.  Baseado nisso,
defini períodos de 12 meses dentro de uma mesma legislatura divididos em duas
partes de mesmo tamanho. Esses períodos iniciam no primeiro dia de cada mês,
desde o 01/Fev do primeiro ano da legislatura até o do penúltimo. Por exemplo,
na 54\textordfeminine{} legislatura, o primeiro período foi de 01/Fev/2011 até
01/Fev/2012 (dividido em 01/Ago/2011), e o último foi de 01/Fev/2014 até
01/Fev/2015. Existem 37 desses períodos por legislatura.

% Objetivo
% % Quais dados precisamos?
% % Qual o período de estudo?
% % Devo definir o período de 1 ano dividido no meio aqui?

% ETL
% % CEBRAP + Câmara dos Deputados
% % Normalização dos partidos
% % Ignora abstenções
% % Considera todos que já votaram ao menos 20 vezes
% % Votações não-unânimes

% Data Analysis
% % Mostrar informações gerais sobre o conjunto de dados

% Modelagem
% % Vou usar só Random Forests? Por que? Se sim, por que não gbm?

% Validação
% % Talvez fosse bom treinar com as legislaturas 50~53 e testar com a 54, ou
% %   com partes dela, pra demonstrar como ele seria usado no dia-a-dia.

% Conclusão

\section{Os dados}

Para desenvolver o modelo preditivo, precisamos de dois conjuntos de dados: os
resultados das votações nominais na Câmara dos Deputados e informações sobre as
coalizões governamentais. Nessa seção descreverei o processo de extração,
limpeza, transformação e carga\footnote{Do inglês, \emph{extract, clean,
transform and load} (ECTL)} desses dados, desde suas fontes até estarem prontos
para uso no modelo. Nosso objetivo é criar uma tabela como a
\ref{table:dataset-final}, com os valores dos pontos ideais dos deputados
federais (nossas variáveis independentes) e uma coluna definindo se eles
mudaram de posicionamento ou não no período (nossa variável dependente).

Nos restringimos a analisar da 50\textordfeminine{} até a 54\textordfeminine{}
legislatura, que compreende o período de 20 anos entre o início do primeiro
governo de Fernando Henrique Cardoso (FHC) em 1995 até o final do primeiro
governo de Dilma Rousseff em 2015. Escolhemos começar a análise no governo de
FHC pois é quando, de acordo com \citeonline{Freitas2008}, termina a fase de
acomodação dos parlamentares as regras definidas pela Constituição de 1988.

\begin{table}
\centering
<<>>=
data = data.frame(antes = c(0.55, 0.9, -0.3),
                  depois = c(-0.4, 0.85, 0.4),
                  mudou_coalizao = c("Sim", "Não", "Sim"))
kable(data)
@
\caption{Exemplo da tabela usada para treinar o algoritmo.}
\label{table:dataset-final}
\end{table}

\subsection{Extração}
\label{sec:miolo:extracao}

O \gls{CEBRAP} reúne diversos dados sobre o legislativo brasileiro. Para este
trabalho, extraímos dele a lista das coalizões governamentais do Brasil.
\citeonline{Figueiredo2007} se inspirou no trabalho de \citeonline{Muller2000}
para definir os critérios de início de uma nova coalizão. Eles são: i) a
mudança da legislatura, e; ii) alterações no conjunto de partidos que controlam
os ministérios. Com base nisso, \citeauthor{Figueiredo2007} listou as coalizões
formadas durante as duas últimas constituições democráticas, nos períodos de
1946 até 1964, e de 1988 até os dias atuais.  

De posse desses dados, também precisamos do resultado das votações nominais
ocorridas na Câmara Federal. O banco de dados do \gls{CEBRAP} possui essas
informações, mas como o modelo desenvolvido foi pensado para ser usado
continuamente, monitorando o comportamento dos deputados federais, preferimos
buscá-los diretamente da fonte.

A Câmara disponibiliza diversos conjuntos de dados em seu sua página na
web\footnote{\url{http://www2.camara.leg.br/transparencia/dados-abertos}}.
Dentre eles está o histórico dos resultados das votações nominais que
precisamos. Infelizmente, até a data de escrita deste trabalho, esses dados só
estavam disponíveis para consulta individualmente através de uma \gls{API}, mas
precisávamos do conjunto completo para análise local.  Isto nos obrigou a
desenvolver um software que busca, uma a uma, as votações ocorridas no nosso
período de interesse.

Esse software\footnote{Disponível em:
\url{https://github.com/vitorbaptista/dados-abertos-camara.gov.br}}, conhecido
como \emph{crawler} (do inglês, ``raspador''), usa os métodos
\emph{ListarProposicoesVotadasEmPlenario}, que a partir de um ano retorna a
lista de proposições votadas, e \emph{ObterVotacaoProposicao}, que retorna
todas as votações ocorridas em uma proposição a partir do seu tipo, número e
ano. Ele foi desenvolvido em Python usando a biblioteca Scrapy
\cite{Python276,Scrapy}. Além de baixar os dados, ele também converte a lista
de proposições votadas em um \gls{CSV} e as votações por proposição em um
\gls{JSON}, a partir do original em \gls{XML}, pois mais ferramentas suportam
esses formatos.

\subsection{Limpeza}

Usando outro programa também desenvolvido em Python\footnote{Disponível em:
\url{https://github.com/vitorbaptista/codigo-mestrado}}, limpamos os dados
extraídos fazendo:

\begin{itemize}
  \item Retiramos espaços em branco no começo ou final dos campos;
  \item Normalizamos os nomes dos partidos seguindo o padrão adotado pelo
\gls{CEBRAP}, onde mudanças de nome são identificados pela primeira e última
sigla (ex.: PJ se torna PRN que se torna PJC, então temos PJ>PTC) e fusões são
identificados pelo maior partido na data da fusão e o novo nome (ex.: PL e
PRONA se tornam PL>PR) \cite{Freitas2008}. A lista completa está no apêndice
\ref{apendice:lista-partidos}.
\end{itemize}

O resultado dessa etapa é guardado em um banco de dados SQLite com o auxílio da
biblioteca SQLAlchemy \cite{SQLite3,SQLAlchemy}. A partir daí, geramos dois
arquivos \gls{CSV} por legislatura: um contendo os dados dos parlamentares e
seus votos (tabela \ref{table:votes}) e outro contendo os detalhes das votações
(tabela \ref{table:votes-metadata}). São esses arquivos 

\begin{table}
\centering
<<>>=
kable(head(votes[[54]][, c(1:9)]))
@
\caption{Exemplo da tabela com detalhes dos parlamentares e seus respectivos votos.}
\label{table:votes}
\end{table}

\begin{landscape}
\begin{table}
\centering
<<>>=
max_str_length = 20
table_data = head(votes_metadata[[54]], 10)
table_data$resumo = paste0(strtrim(table_data$resumo, max_str_length), "...")
table_data$obj_votacao = paste0(strtrim(table_data$obj_votacao, max_str_length), "...")
kable(table_data)
@
\caption{Exemplo da tabela com detalhes das votações. Os campos ``resumo'' e
``obj\_votacao'' foram limitados a \Sexpr{max_str_length} caracteres por
questões de formatação da página.}
\label{table:votes-metadata}
\end{table}
\end{landscape}

\subsection{Transformação}
\label{sec:miolo:transformacao}

Nesta etapa, calculamos a mudança na posição dos pontos ideais dos deputados
federais entre os dois períodos de interesse e definimos se, segundo os dados
do \gls{CEBRAP}, houve ou não uma alteração na coalizão no período.

O cálculo da mudança nos pontos ideais é feito segundo a metologia de
\citeonline{Poole2005} descrita na sessão
\ref{cap:fundamentacao:comparando-pontos-ideais-no-tempo}. Para isso,
desenvolvemos um programa\footnote{Disponível em:
\url{https://github.com/vitorbaptista/codigo-mestrado}} na linguagem R usando e
as bibliotecas wnominate e pscl \cite{R,R:wnominate,R:pscl}.

Existem duas variáveis que precisam ser definidas para usarmos a metodologia de
\citeauthor{Poole2005}: os períodos de análise da mudança de comportamento e o
número de repetições para cálculo do erro das estimativas. Com relação ao
cálculo do erro, \citeauthor{Poole2005} recomenda 101 repetições. Apesar disso,
nos limitamos a 10 repetições por restrições na nossa capacidade de
processamento.

Para definir os períodos de análise, levamos em consideração os critérios de
escolha de votações do W-NOMINATE, que exige ao menos 20 votações com no mínimo
2,5\% de votos contrários a maioria. Definimos períodos de 12 meses dentro de
uma mesma legislatura, divididos em duas partes de mesmo tamanho (o primeiro e
o último semestre). Esses períodos iniciam no primeiro dia de cada mês, desde o
01/Fev do primeiro ano da legislatura até o do penúltimo. Por exemplo, na
54\textordfeminine{} legislatura, o primeiro período foi de 01/Fev/2011 até
01/Fev/2012 (dividido em 01/Ago/2011), e o último foi de 01/Fev/2014 até
01/Fev/2015. Existem 37 desses períodos por legislatura.

Na tabela \ref{table:estatisticas-legislaturas}, mostramos o número de
deputados federais e votações por legislatura. Consideramos deputados federais
todos parlamentares que participaram de alguma votação na Câmara dos Deputados
no período, por isso o número é maior do que o número de cadeiras. Por
legislatura, temos em média \Sexpr{mean(num_deputados)} deputados e
\Sexpr{mean(num_votacoes)} votações com \Sexpr{mean(num_votos) /
mean(num_votacoes)} votos cada.

\section{Construção do modelo}

% TODO: Preciso falar sobre a variável de coalizão, de onde ela veio, como é
% definida e como a usamos. Também preciso falar do período de estudo (100
% votações).

\subsection{Variável dependente}

A variável dependente indica se o parlamentar entrou ou saiu da coalizão do
governo no período de estudo. Ela pode tomar os valores \verb|N|, caso ele
tenha se mantido no governo ou oposição, ou \verb|S| caso tenha trocado de
lado. Um favor importante é como definimos o período de estudo, ou seja, quando
consideramos que um parlamentar mudou de lado?

Se considerarmos que ele mudou de lado somente quando seu partido entrou (ou
saiu) da coalizão, o objetivo deste trabalho, de prever quando um parlamentar
vai mudar de posicionamento com base no padrão de votação, é impossível. Se um
parlamentar só muda de comportamento depois de entrar (ou sair) oficialmente da
coalizão, na melhor hipótese nosso algoritmo conseguiria detectar as datas de
entrada (ou saída). Em outras palavras, não conseguiríamos prever essa mudança.
Por isso, a hipótese essencial para nosso trabalho é que os parlamentares mudam
de comportamento antes de entrarem (ou saírem) da coalizão. Mas quanto antes?

Se escolhermos um período maior do que o real, estaremos ``ensinando'' nosso
algoritmo algo errado. Se, por outro lado, escolhermos um período menor, também
teremos problemas. Como complicador, é provável que não exista um valor correto
em todas as ocasiões. Algumas vezes, a mudança de comportamento pode acontecer
2 meses antes da mudança oficial de posicionamento; outras, ela pode ocorrer 10
meses antes. Como escolher, então?

Não há uma resposta fácil para esta pergunta. Neste trabalho, considerei os 6
meses antes da mudança oficial de posicionamento. Obtive bons resultados, mas
este é um ponto que pode ser melhor estudado, tanto usando outros valores,
quanto analisando se esses valores mudam dependendo da legislatura.

\subsection{Variáveis independentes}

Usamos os pontos ideais do parlamentar estimado usando o W-NOMINATE e seus
respectivos erros-padrão como variáveis independentes.

\section{Considerações Finais}

Desenvolvi uma ferramenta que extrai dados de diversas fontes, os consolida, analisa e gera relatórios para os usuários. Cada parte pode ser modificada e expandida, e os dados (e algoritmos) podem ser usados por outras pessoas. Daqui falta validar que os algoritmos na parte de análise geram algo interessante.
